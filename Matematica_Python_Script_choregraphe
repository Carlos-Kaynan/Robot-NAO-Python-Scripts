'''
üéØ Como usar no Choregraphe:
Abra o Choregraphe.

Arraste um bloco "Python Script" para o seu workspace.

Clique duas vezes nele para editar.

Apague o c√≥digo existente e cole esse c√≥digo acima.

Conecte a entrada onStart a algum evento (como um bot√£o ou "start behavior").

Teste com o NAO conectado ou no modo simula√ß√£o!
'''






from naoqi import ALProxy
import random
import time

def onInput_onStart():
    # Conecta aos proxies do NAO
    tts = ALProxy("ALTextToSpeech", "127.0.0.1", 9559)
    motion = ALProxy("ALMotion", "127.0.0.1", 9559)

    # Desperta o rob√¥
    motion.wakeUp()

    # Lista de perguntas e respostas
    perguntas = [
        {"pergunta": "Quanto √© tr√™s mais quatro?", "resposta": "sete"},
        {"pergunta": "Quanto √© cinco menos dois?", "resposta": "tr√™s"},
        {"pergunta": "Quanto √© dois vezes tr√™s?", "resposta": "seis"},
        {"pergunta": "Quanto √© oito dividido por dois?", "resposta": "quatro"},
        {"pergunta": "Quanto √© dez menos sete?", "resposta": "tr√™s"}
    ]

    # Escolhe uma pergunta aleat√≥ria
    q = random.choice(perguntas)

    # Fala com o aluno
    tts.say("Ol√°! Vamos aprender matem√°tica!")
    tts.say("Preste aten√ß√£o!")
    tts.say(q["pergunta"])

    # Simula resposta do aluno (mude isso futuramente para fala real ou bot√£o)
    time.sleep(3)
    resposta_aluno = q["resposta"]  # <- Aqui voc√™ pode trocar por uma resposta errada para testar

    if resposta_aluno.lower() == q["resposta"]:
        tts.say("Muito bem! Voc√™ acertou!")
        # Comemora balan√ßando a cabe√ßa
        for i in range(2):
            motion.setAngles("HeadYaw", 1.0, 0.3)
            time.sleep(0.5)
            motion.setAngles("HeadYaw", -1.0, 0.3)
            time.sleep(0.5)
        motion.setAngles("HeadYaw", 0.0, 0.3)
    else:
        tts.say("Hmm... quase! A resposta certa √© " + q["resposta"] + ".")

    tts.say("Vamos tentar de novo mais tarde. At√© logo!")
    motion.rest()

    # Finaliza o bloco
    onStopped()

def onInput_onStop():
    motion = ALProxy("ALMotion", "127.0.0.1", 9559)
    motion.rest()
    onStopped()
